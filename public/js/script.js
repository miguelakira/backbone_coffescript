// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var Item, List, ListView, list_view;
    Item = (function(_super) {

      __extends(Item, _super);

      function Item() {
        return Item.__super__.constructor.apply(this, arguments);
      }

      Item.prototype.defaults = {
        part1: 'Hello',
        part2: 'Backbone'
      };

      return Item;

    })(Backbone.Model);
    List = (function(_super) {

      __extends(List, _super);

      function List() {
        return List.__super__.constructor.apply(this, arguments);
      }

      List.prototype.model = Item;

      return List;

    })(Backbone.Collection);
    ListView = (function(_super) {

      __extends(ListView, _super);

      function ListView() {
        return ListView.__super__.constructor.apply(this, arguments);
      }

      ListView.prototype.el = $('body');

      ListView.prototype.initialize = function() {
        _.bindAll(this);
        this.collection = new List;
        this.collection.bind('add', this.appendItem);
        this.collection.bind('remove', this.removeItem);
        this.counter = 0;
        return this.render();
      };

      ListView.prototype.render = function() {
        $(this.el).append('<button id="addButton">Add List Item</button>');
        $(this.el).append('<button id="removeButton">Remove List Item</button>');
        return $(this.el).append('<ul><li>Hello, Backbone! </li></ul>');
      };

      ListView.prototype.addItem = function() {
        var item;
        this.counter++;
        item = new Item;
        item.set({
          part2: "" + (item.get('part2')) + " " + this.counter
        });
        return this.collection.add(item);
      };

      ListView.prototype.deleteItem = function() {
        var item;
        this.counter--;
        item = this.collection.last();
        return this.collection.remove(item);
      };

      ListView.prototype.appendItem = function(item) {
        return $('ul').append("<li>" + (item.get('part1')) + " " + (item.get('part2')) + "</li>");
      };

      ListView.prototype.removeItem = function() {
        $('li:last-child').remove();
        return console.log($('li:last-child'));
      };

      ListView.prototype.events = {
        'click button#addButton': 'addItem',
        'click button#removeButton': 'deleteItem'
      };

      return ListView;

    })(Backbone.View);
    return list_view = new ListView;
  });

}).call(this);
